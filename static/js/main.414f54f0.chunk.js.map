{"version":3,"sources":["actions/moviesActions.js","actions/types.js","components/movies.js","components/search.js","components/filter.js","components/navBar.js","reducers/moviesReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["fetchMovies","filter","arguments","length","undefined","page","dispatch","fetch","then","res","json","data","type","payload","results","totalPages","total_pages","searchMovie","searched","Movies","paginationClick","_this","props","console","log","this","movies","react_default","a","createElement","movie","map","key","id","className","alt","src","poster_path","title","release_date","overview","slice","pagination","onClick","bind","Component","connect","state","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","changeSearched","placeholder","searchedTitle","Filter","changeFilter","_this2","disabled","NavBar","search","components_filter","initialState","combineReducers","action","objectSpread","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","App","es","navBar_NavBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.414f54f0.chunk.js","sourcesContent":["import {\r\n  FETCH_MOVIES,\r\n  SEARCH_MOVIE,\r\n  CHANGE_FILTER,\r\n  CHANGE_SEARCHED\r\n} from \"./types\";\r\n\r\nexport const fetchMovies = (filter = \"popular\", page = 1) => dispatch => {\r\n  fetch(\r\n    \"https://api.themoviedb.org/3/movie/\" +\r\n      filter +\r\n      \"?api_key=52b79f7149942ffa860e6c6dfa4522ad&language=en-US&page=\" +\r\n      page\r\n  )\r\n    .then(res => res.json())\r\n    .then(data =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: data.results,\r\n        page: data.page,\r\n        totalPages: data.total_pages,\r\n        filter: filter\r\n      })\r\n    );\r\n};\r\n\r\nexport const searchMovie = (searched, page = 1) => dispatch => {\r\n  fetch(\r\n    \"https://api.themoviedb.org/3/search/movie?api_key=52b79f7149942ffa860e6c6dfa4522ad&language=en-US&query=\" +\r\n      searched +\r\n      \"&page=\" +\r\n      page +\r\n      \"&include_adult=false\"\r\n  )\r\n    .then(res => res.json())\r\n    .then(data =>\r\n      dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: data.results,\r\n        page: data.page,\r\n        totalPages: data.total_pages\r\n      })\r\n    );\r\n};\r\n\r\nexport const changeFilter = filter => dispatch => {\r\n  dispatch({\r\n    type: CHANGE_FILTER,\r\n    filter: filter\r\n  });\r\n};\r\n\r\nexport const changeSearched = searched => dispatch => {\r\n  dispatch({\r\n    type: CHANGE_SEARCHED,\r\n    searched: searched\r\n  });\r\n};\r\n","export const FETCH_MOVIES = \"FETCH_MOVIES\";\r\nexport const SEARCH_MOVIE = \"SEARCH_MOVIE\";\r\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\r\nexport const CHANGE_SEARCHED = \"CHANGE_SEARCHED\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovies, searchMovie } from \"../actions/moviesActions\";\r\n\r\nclass Movies extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  componentDidMount() {\r\n    this.props.fetchMovies(this.props.filter);\r\n  }\r\n\r\n  paginationClick = page => {\r\n    if (page > 0)\r\n      if (page <= this.props.totalPages)\r\n        if (this.props.searched)\r\n          this.props.searchMovie(this.props.searched, page);\r\n        else {\r\n          console.log(this.props.filter);\r\n          this.props.fetchMovies(this.props.filter, page);\r\n        }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.totalPages);\r\n    if (this.props.movies.length === 0)\r\n      return <div>Nothing to show! Sorry :=)</div>;\r\n    const movie = this.props.movies.map(movie => (\r\n      <div key={movie.id} className=\"movie\">\r\n        <div>\r\n          <img\r\n            alt=\"poster\"\r\n            src={\"http://image.tmdb.org/t/p/w185/\" + movie.poster_path}\r\n          />\r\n        </div>\r\n        <div className=\"movie-overview\">\r\n          <div className=\"movie-title\">\r\n            <b>{movie.title}</b>\r\n          </div>\r\n          <hr />\r\n          <div className=\"movie-release\">\r\n            <b>{movie.release_date}</b>\r\n          </div>\r\n          <br />\r\n          <div className=\"movie-overview-text\">\r\n            {movie.overview.length > 250\r\n              ? movie.overview.slice(0, 250) + \"...\"\r\n              : movie.overview}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n    const pagination = (\r\n      <div>\r\n        <ul className=\"pagination\">\r\n          <li\r\n            className={this.props.page === 1 ? \"hidden\" : \"\"}\r\n            onClick={this.paginationClick.bind(this, 1)}\r\n          >\r\n            First\r\n          </li>\r\n          <li\r\n            className={this.props.page === 1 ? \"hidden\" : \"\"}\r\n            onClick={this.paginationClick.bind(this, this.props.page - 1)}\r\n          >\r\n            Previous\r\n          </li>\r\n          <li className=\"active\">{this.props.page}</li>\r\n          <li\r\n            className={\r\n              this.props.page === this.props.totalPages ? \"hidden\" : \"\"\r\n            }\r\n            onClick={this.paginationClick.bind(this, this.props.page + 1)}\r\n          >\r\n            {this.props.page + 1}\r\n          </li>\r\n          <li\r\n            className={\r\n              this.props.page + 1 >= this.props.totalPages ? \"hidden\" : \"\"\r\n            }\r\n            onClick={this.paginationClick.bind(this, this.props.page + 2)}\r\n          >\r\n            {this.props.page + 2}\r\n          </li>\r\n          <li\r\n            className={\r\n              this.props.page + 2 >= this.props.totalPages ? \"hidden\" : \"\"\r\n            }\r\n            onClick={this.paginationClick.bind(this, this.props.page + 1)}\r\n          >\r\n            Next\r\n          </li>\r\n          <li\r\n            className={this.props.page >= this.props.totalPages ? \"hidden\" : \"\"}\r\n            onClick={this.paginationClick.bind(this, this.props.totalPages)}\r\n          >\r\n            Last\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n    return (\r\n      <main>\r\n        <div className=\"movies\">{movie}</div>\r\n        <div>{pagination}</div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies,\r\n  page: state.movies.page,\r\n  totalPages: state.movies.totalPages,\r\n  filter: state.movies.filter,\r\n  searched: state.movies.searched\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMovies, searchMovie }\r\n)(Movies);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  changeSearched\r\n} from \"../actions/moviesActions\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searched: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      if (this.state.searched) {\r\n        this.props.searchMovie(this.state.searched);\r\n        this.props.changeSearched(this.state.searched);\r\n      } else {\r\n        this.props.fetchMovies(this.props.filter);\r\n        this.props.changeSearched(this.state.searched);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav-search\">\r\n        <input\r\n          name=\"searched\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search\"\r\n          value={this.state.searchedTitle}\r\n          onChange={this.onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies,\r\n  page: state.movies.page,\r\n  totalPages: state.movies.totalPages,\r\n  filter: state.movies.filter\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchMovie, fetchMovies, changeSearched }\r\n)(Search);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  changeFilter\r\n} from \"../actions/moviesActions\";\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filter: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ filter: this.props.filter }, () => {\r\n      if (this.state.filter) this.props.changeFilter(this.state.filter);\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      if (this.state.filter) {\r\n        this.props.fetchMovies(this.state.filter);\r\n        this.props.changeFilter(this.state.filter);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav-filter\">\r\n        <div className=\"input-group\">\r\n          <select\r\n            disabled={this.props.searched ? \"disabled\" : \"\"}\r\n            className=\"custom-select\"\r\n            name=\"filter\"\r\n            onChange={this.onChange}\r\n            value={this.state.filter}\r\n          >\r\n            <option value=\"popular\">popular</option>\r\n            <option value=\"top_rated\">top rated</option>\r\n            <option value=\"upcoming\">upcoming</option>\r\n            <option value=\"now_playing\">now playing</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies,\r\n  page: state.movies.page,\r\n  totalPages: state.movies.totalPages,\r\n  filter: state.movies.filter,\r\n  searched: state.movies.searched\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchMovie, fetchMovies, changeFilter }\r\n)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./search\";\r\nimport Filter from \"./filter\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        <Search />\r\n        <Filter />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  FETCH_MOVIES,\r\n  SEARCH_MOVIE,\r\n  CHANGE_FILTER,\r\n  CHANGE_SEARCHED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  page: 0,\r\n  totalPages: 0,\r\n  filter: \"popular\",\r\n  searched: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_MOVIES:\r\n      console.log(\"FETCH_MOVIES\");\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        page: action.page,\r\n        totalPages: action.totalPages,\r\n        filter: action.filter\r\n      };\r\n    case SEARCH_MOVIE:\r\n      console.log(\"SEARCH_MOVIE\");\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        page: action.page,\r\n        totalPages: action.totalPages\r\n      };\r\n\r\n    case CHANGE_FILTER:\r\n      console.log(\"CHANGE_FILTER\");\r\n      return {\r\n        ...state,\r\n        filter: action.filter\r\n      };\r\n    case CHANGE_SEARCHED:\r\n      console.log(\"CHANGE_SEARCHED\");\r\n      return {\r\n        ...state,\r\n        searched: action.searched\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport moviesReducer from \"./moviesReducer\";\r\n\r\nexport default combineReducers({\r\n  movies: moviesReducer\r\n});\r\n","import {\r\n  createStore,\r\n  applyMiddleware\r\n} from \"C:/Users/Espada/AppData/Local/Microsoft/TypeScript/3.2/node_modules/redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\n\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navBar\";\n\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <NavBar />\n          <Movies />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}